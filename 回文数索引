题目描述
给定一个仅由小写字母组成的字符串。现在请找出一个位置，删掉那个字母之后，字符串变成回文。请放心总会有一个合法的解。如果给定的字符串已经是一个回文串，那么输出-1。
输入描述:
第一行包含T，测试数据的组数。后面跟有T行，每行包含一个字符串。
输出描述:
如果可以删去一个字母使它变成回文串，则输出任意一个满足条件的删去字母的位置（下标从0开始）。例如：

bcc

我们可以删掉位置0的b字符。
示例1
输入
复制
3
aaab
baa
aaa
输出
复制
3
0
-1
#include <iostream>
#include <string>
using namespace std;
bool IsPalindrome(string &s, int *start, int *end){
	int i = 0;
	int j = s.size() - 1;
	bool result = true;
	while(i <= j){
		if(s[i] != s[j]){
			result = false;
			break;
	}
	i++,j--;
	}
	if(start != nullptr) *start = i;
	if(end != nullptr) *end = j;
		return result;
}
int main()
{
	int num = 0;
	cin >> num;
	while(num){
		string s;
		cin >> s;
		int start = 0;
		int end = s.size() - 1;
		if(IsPalindrome(s, &start, &end)){
			cout << -1 << endl; //已经是回文了
		}else{
			s.erase(end, 1);
			if(IsPalindrome(s, nullptr, nullptr)){
				cout << end << endl;
			}else{
				cout << start << endl;
			}
		}
		num--;
	}
}