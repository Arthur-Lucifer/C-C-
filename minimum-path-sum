minimum-path-sum
给定一个由非负整数填充的m x n的二维数组，现在要从二维数组的左上角走到右下角，请找出路径上的所有数字之和最小的路径。
注意：你每次只能向下或向右移动。
class Solution {
public:
    int minPathSum(vector<vector<int> > &grid) {
        int m = grid.size();
        int n = grid[0].size();
        vector<vector<int>> v(m,vector<int>(n,INT_MAX));
        v[0][0] = grid[0][0];
        for(int i = 1;i<m;i++)
            v[i][0] = v[i-1][0] + grid[i][0];
        for(int i = 1;i<n;i++)
            v[0][i] = v[0][i-1] + grid[0][i];
        for(int i = 1;i<m;i++)
            for(int j = 1;j<n;j++)
                v[i][j] = min(v[i-1][j],v[i][j-1]) + grid[i][j];
        return v[m-1][n-1];
    }
};
