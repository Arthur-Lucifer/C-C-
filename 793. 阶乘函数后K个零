 f(x) 是 x! 末尾是0的数量。（回想一下 x! = 1 * 2 * 3 * ... * x，且0! = 1）
例如， f(3) = 0 ，因为3! = 6的末尾没有0；而 f(11) = 2 ，因为11!= 39916800末端有2个0。给定 K，找出多少个非负整数x ，有 f(x) = K 的性质。
示例 1:
输入:K = 0
输出:5
解释: 0!, 1!, 2!, 3!, and 4! 均符合 K = 0 的条件。
示例 2:
输入:K = 5
输出:0
解释:没有匹配到这样的 x!，符合K = 5 的条件。
注意：
K是范围在 [0, 10^9] 的整数。
class Solution {
public:
    int preimageSizeFZF(int K) {
        if(K == 0) return 5; // 如果不加入 这个case, 那么边界 == 0 输出正确结果完全是巧合 

        long long left = (long long)K;
        long long right = 5 * (long long)K + 1;

        while(left < right){
            long long mid = left + (right - left) / 2;
            int rstK = help(mid);
            if(rstK == K) return 5;
            if(rstK < K) {left = mid + 1;}  // 千万不能写成 left++, 否则时间复杂度就上升很多
            else{
                right = mid;
            }
        }

        return 0;
    }
    // 用以计算 K! 尾部 0 的个数
    int help(long long k){
        long long ans = 0;

        if(k < 5) return ans;
        
        while(k >= 5){
            ans += (k / 5);
            k /= 5;
        }
        return ans;
    }
};