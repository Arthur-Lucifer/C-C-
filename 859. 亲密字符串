给定两个由小写字母构成的字符串 A 和 B ，只要我们可以通过交换 A 中的两个字母得到与 B 相等的结果，就返回 true ；否则返回 false 。
示例 1：
输入： A = "ab", B = "ba"
输出： true
示例 2：
输入： A = "ab", B = "ab"
输出： false
示例 3:
输入： A = "aa", B = "aa"
输出： true
示例 4：
输入： A = "aaaaaaabc", B = "aaaaaaacb"
输出： true
示例 5：
输入： A = "", B = "aa"
输出： false
提示：
0 <= A.length <= 20000
0 <= B.length <= 20000
A 和 B 仅由小写字母构成。

class Solution {
public:
    bool buddyStrings(string A, string B) {
        if(A.size() != B.size())
            return false;
        if(A == B)//相等看字符是否有重
        {
            int letter[26] = {0};
            for(int i = 0;i<A.size();i++)
            {
                letter[A[i] - 'a']++;
                if(letter[A[i] - 'a']>1)
                    return true;
            }
        }
        else//不相等看字符是否只有两不同且可交换
        {
            int first = 0,second = 0,count = 0;
            for(int i = 0;i<A.size();i++)
            {
                if(A[i] != B[i])
                {
                    second = first;
                    first = i;
                    count++;
                }
                if(count>2)
                    return false;
            }
            if(count == 2 && A[first] == B[second] && A[second] == B[first])
                return true;
        }    
        return false;
    }
};
