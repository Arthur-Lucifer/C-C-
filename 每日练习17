#include<iostream>
#include<vector>
using namespace std;
int main()
{
    int n;
    while(cin>>n)
    {
        int m = 2 * n - 1;
        vector<vector<int>> v(n, vector<int>(m, 0));
        v[0][0] = 1;
        for(int i = 1;i<n;i++)
        {
            v[i][0] = v[i][2*i] = 1;
            for(int j = 1 ;j<(2*i);j++)
            {
                if(j==1)
                    v[i][j] = v[i - 1][j - 1] + v[i - 1][j];
                else
                    v[i][j] = v[i - 1][j - 2] + v[i - 1][j - 1] + v[i - 1][j];
            }
        }
        int j;
        for(j = 0 ;j<m;j++)
        {
            if(v[n-1][j]%2 == 0){
                cout<<j+1<<endl;
                break;
            }
        }
        if(j==m)
            cout<<-1<<endl;
    }
    return 0;
}

#include<iostream>
#include<string>
#include<algorithm>
using namespace std;
int main()
{
    string addend,augend;
    while(cin>>addend>>augend)
    {
        string sum;
        int i = addend.size()-1;
        int j = augend.size()-1;
        int flag = 0;
        for(; i>=0||j>=0 ;i--,j--)
        {
            int n1 = (i>=0) ? (addend[i]-'0'):0;
            int n2 = (j>=0) ? (augend[j]-'0'):0;
            int temp = n1 + n2 + flag;
            sum += (temp%10 + '0');
            flag = temp/10;
        }
        if(flag)
            sum += '1';
        reverse(sum.begin(),sum.end());
        cout<<sum<<endl;
    }
}
