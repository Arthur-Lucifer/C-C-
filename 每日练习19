有这样一道智力题：“某商店规定：三个空汽水瓶可以换一瓶汽水。小张手上有十个空汽水瓶，她最多可以换
多少瓶汽水喝？”答案是5瓶，方法如下：先用9个空瓶子换3瓶汽水，喝掉3瓶满的，喝完以后4个空瓶子，用3
个再换一瓶，喝掉这瓶满的，这时候剩2个空瓶子。然后你让老板先借给你一瓶汽水，喝掉这瓶满的，喝完以
后用3个空瓶子换一瓶满的还给老板。如果小张手上有n个空汽水瓶，最多可以换多少瓶汽水喝？
输入描述：
输入文件最多包含10组测试数据，每个数据占一行，仅包含一个正整数n（1<=n<=100），表示小张手上的
空汽水瓶数。n=0表示输入结束，你的程序不应当处理这一行。
输出描述：
对于每组测试数据，输出一行，表示最多可以喝的汽水瓶数。如果一瓶也喝不到，输出0。
示例1:
输入
3
10
81
0
输出
1
5
40
正确答案：
#include<iostream>
using namespace std;
int main()
{
    int n;
    while(cin>>n){
        int count = 0;
        while(n>2){
            int soda = n/3;
            count += soda;
            n = n%3 + soda;
            if(n==2)
                count++;
        }
        cout<<count<<endl;
    }
    return 0;
}
2. 查找两个字符串a,b中的最长公共子串。若有多个，输出在较短串中最先出现的那个。
输入描述：
输入两个字符串
输出描述：
返回重复出现的字符
示例1:
输入
abcdefghijklmnop
abcsafjklmnopqrstuvw
输出
jklmnop
正确答案：
#include<iostream>
#include<string>
#include<algorithm>
using namespace std;
string sub(string A,string B)
{
    int res = 0;
    string str;
    for(int i = 0;i < A.size();i++)
    {
        for(int j = i;j <= A.size();j++)
        {
            string strTmp = A.substr(i,j-i);
            int ret = B.find(strTmp);
            if(ret!=B.npos && strTmp.size()>res){
                res = strTmp.size();
                str = strTmp;
            }
        }
    }
    return str;
}
int main()
{
    string str1,str2;
    while(cin>>str1>>str2)
    {
        if(str1.size()<str2.size())
            cout<<sub(str1,str2)<<endl;
        else
            cout<<sub(str2,str1)<<endl;
    }
    return 0;
}
