3 x 3 的幻方是一个填充有从 1 到 9 的不同数字的 3 x 3 矩阵，其中每行，每列以及两条对角线上的各数之和都相等。
给定一个由整数组成的 grid，其中有多少个 3 × 3 的 “幻方” 子矩阵？（每个子矩阵都是连续的）。
示例：
输入: [[4,3,8,4],
      [9,5,1,9],
      [2,7,6,2]]
输出: 1
解释: 
下面的子矩阵是一个 3 x 3 的幻方：
438
951
276

而这一个不是：
384
519
762

总的来说，在本示例所给定的矩阵中只有一个 3 x 3 的幻方子矩阵。
提示:

1 <= grid.length <= 10
1 <= grid[0].length <= 10
0 <= grid[i][j] <= 15

class Solution {
public:
    int numMagicSquaresInside(vector<vector<int>>& grid) {
        vector<int> m = {4, 3, 8, 1, 6, 7, 2, 9, 4, 3, 8, 1, 6, 7, 2, 9};
        int di[8] = {0, -1, -1, -1, 0 , 1, 1, 1 },dj[8] = {-1, -1, 0, 1, 1, 1, 0, -1}, cnt = 0;
        for (int i = 1; i < grid.size() - 1; i ++) 
            for (int j = 1; j < grid[0].size() - 1; j ++) 
                if (grid[i][j] == 5) {
                    vector<int> n;
                    for (int k = 0; k < 8; k ++) 
                        n.push_back(grid[i + di[k]][j + dj[k]]);
                        for (int g = 0; g < 8; g ++) 
                            if (m[g] == n[0] && (n == vector<int>(m.begin() + g, m.begin() + g + 8) 
                            || n == vector<int>(m.rbegin() + 7 - g, m.rbegin() + 15 - g))) {cnt ++; break;}
                }
        return cnt;
    }
};