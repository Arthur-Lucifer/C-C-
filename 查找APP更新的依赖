/*整数分解 0.91
时间限制： 1000MS
内存限制： 102400KB
题目描述：
给定一个正整数数n, 一个正整数k 一个可行的数字组合是一组正整数， 它们的和为n，且组合中的数字个数小于等于k, 组合中允许数字重复出现 输出：所有可能的组合数(两个组合中出现的数字相同，顺序不同计为同一个）
	输入描述
	public int numOf(int n, int k)
	说明：
	n：组合累加和
	k：最多可以使用的正整数个数
	输出描述
	返回：组合数
	样例输入
	5
	2
	样例输出
	3
	提示
	5 = 5
	5 = 1 + 4
	5 = 2 + 3*/
#include<iostream>
using namespace std;
void numof(int k, int n, int &count,int min)
{
	if (n == 0 && k >= 0)
	{	
		count++;
		return;
	}
	if (k == 0)
		return;
	for (int i = min; i <= n; i++)
	{
		numof(k - 1, n - i, count, i);
	}
}
int main()
{
	int n, k;
	cin >> n >> k;
	int count = 0;
	numof(k, n, count, 1);
	cout << count << endl;
	return 0;
}