数字 n 代表生成括号的对数，请你设计一个函数，用于能够生成所有可能的并且 有效的 括号组合。
示例：
输入：n = 3
输出：[
       "((()))",
       "(()())",
       "(())()",
       "()(())",
       "()()()"
     ]
	 
class Solution {
public:
    vector<string> res;
    void dfs(string &str,int i,int j,int n)
    {
        if(str.size() == 2*n && i == j)
        {
            res.push_back(str);
            return;
        }
        if(i<n)
        {
            str += '(';
            dfs(str,i+1,j,n);
            str.pop_back();
        }
        if(j<i)
        {
            str += ')';
            dfs(str,i,j+1,n);
            //str -= ')';
            str.pop_back();
        }
        return;
    }
    vector<string> generateParenthesis(int n) {
        string str;
        res = vector<string>();
        dfs(str,0,0,n);
        return res;
    }
};