给定一个整数数组 a，其中1 ≤ a[i] ≤ n （n为数组长度）, 其中有些元素出现两次而其他元素出现一次。

找到所有出现两次的元素。

你可以不用到任何额外空间并在O(n)时间复杂度内解决这个问题吗？

示例：

输入:
[4,3,2,7,8,2,3,1]

输出:
[2,3]

class Solution {
public:
    vector<int> findDuplicates(vector<int>& nums) {
        vector<int> ans;
        int n = nums.size();
        if(n == 0) 
            return ans;
        for(int i = 0;i<n;i++)
        {
            int index = abs(nums[i]);
            if(nums[index-1]<0)
                ans.push_back(index);
            else
                nums[index-1] *= -1;
        }
        return ans;
    }
};