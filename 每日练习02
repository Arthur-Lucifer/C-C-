下面叙述错误的是（）
char acX[]=”abc”;
char acY[]={‘a’,’b’,’c’};
char *szX=”abc”;
char *szY=”abc”;
A acX与acY的内容可以修改
B szX与szY指向同一个地址
C acX占用的内存空间比acY占用的大
D szX的内容修改后，szY的内容也会被更改
正确答案：D

在32位cpu上选择缺省对齐的情况下，有如下结构体定义：
struct A{
unsigned a : 19;
unsigned b : 11;
unsigned c : 4;
unsigned d : 29;
char index;
};
则sizeof（struct A）的值为（）
A 9
B 12
C 16
D 20
正确答案：C

以下不是double compare(int,int)的重载函数的是()
A int compare(double,double)
B double compare(double,double)
C double compare(double,int)
D int compare(int,int)
正确答案：D

关于虚函数的描述正确的是()
A 派生类的虚函数与基类的虚函数具有不同的参数个数和类型
B 内联函数不能是虚函数
C 派生类必须重新定义基类的虚函数
D 虚函数可以是一个static型的函数
正确答案：B
1. 牛牛定义排序子序列为一个数组中一段连续的子序列,并且这段子序列是非递增或者非递减排序的。牛牛有
一个长度为n的整数数组A,他现在有一个任务是把数组A分为若干段排序子序列,牛牛想知道他最少可以把这个
数组分为几段排序子序列.
如样例所示,牛牛可以把数组A划分为[1,2,3]和[2,2,1]两个排序子序列,至少需要划分为2个排序子序列,所以输出2
输入描述：
输入的第一行为一个正整数n(1 ≤ n ≤ 10^5)
第二行包括n个整数A_i(1 ≤ A_i ≤ 10^9),表示数组A的每个数字。
输出描述：
输出一个整数表示牛牛可以将A最少划分为多少段排序子序列
示例1:
输入
6
1 2 3 2 2 1
输出
2
正确答案：
#include<iostream>
#include<vector>
using namespace std;
int main()
{
  int n;
  cin>>n;
  vector<int> v;
  v.resize(n);
  for(int i = 0; i < n; ++i)
  cin>>v[i];
  //找出波峰波谷
  int ret = 1;
  for(int i=1; i<n-1; i++)
  {
    if((v[i-1] < v[i] && v[i] > v[i+1])
      || (v[i-1] > v[i] && v[i] < v[i+1]))
    {
      ret++;
    // 如果发现波峰或者波谷，这里i++已经比过了，则需要跳过，但是要注意越界。
    if(i != n-3)
      i++;
    }
  }
  cout<<ret<<endl;
}
2. 将一句话的单词进行倒置，标点不倒置。比如 I like beijing. 经过函数后变为：beijing. like I
输入描述：
每个测试输入包含1个测试用例： I like beijing. 输入用例长度不超过100
输出描述：
依次输出倒置之后的字符串,以空格分割
示例1:
输入
I like beijing.
输出
beijing. like I
正确答案：
#include <iostream>
#include <string>
#include <algorithm>
using namespace std;
int main()
{
  string s;
  getline(cin, s));
  reverse(s.begin(), s.end());
  auto start = s.begin();
  while (start != s.end())
  {
    auto end = start;
    while (end != s.end() && *end != ' ')
      end++;
    reverse(start, end);
    if (end != s.end())
      start = end + 1;
    else
      start = end;
  }
  cout << s << endl;
  return 0;
}
