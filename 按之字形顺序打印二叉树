题目描述
请实现一个函数按照之字形打印二叉树，即第一行按照从左到右的顺序打印，第二层按照从右至左的顺序打印，第三行按照从左到右的顺序打印，其他行以此类推。
/*
struct TreeNode {
	int val;
	struct TreeNode *left;
	struct TreeNode *right;
	TreeNode(int x) :
	val(x), left(NULL), right(NULL) {
	}
};
*/
class Solution {
public:
vector<vector<int> > Print(TreeNode* pRoot) {
	vector<vector<int> > result;
	if(pRoot == nullptr){
		return result;
	}
	stack<TreeNode*> st;
	queue<TreeNode*> q;
	st.push(pRoot);
	int dir = 1;
	vector<int> v;
	while(!st.empty()){
		int size = st.size();
		for(int i = 0; i < size; i++){
			TreeNode *curr = st.top();
			st.pop();
			v.push_back(curr->val);
			TreeNode *first = (dir == 1)?curr->left:curr->right;
			TreeNode *second = (dir == 1)?curr->right:curr->left;
			if(first != nullptr) q.push(first);
			if(second != nullptr) q.push(second);
		}
		result.push_back(v);
		while(!q.empty()){
			st.push(q.front());
			q.pop();
		}
		dir = (dir == 1)? 2 : 1;
		v.clear();
	}
	return result;
}
};