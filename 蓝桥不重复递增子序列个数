#include<iostream>
#include<string>
#include<vector>
#include<map>
using namespace std;
void dfs(string str, int pos, map<string, int>& mt, string t)
{
	mt[t]++;
	if (pos > str.size())
		return;
	for (int i = pos; i < str.size(); i++)
	{
		if (str[i] > t[t.size() - 1]) {
			/*dfs(str, i + 1, mt, t);*/
			dfs(str, i + 1, mt, t + str[i]);
		}
	}
	return;
}
int main()
{
	string str;
	cin >> str;
	int n = str.size();
	map<string, int> res;
	for (int i = 0; i < n; i++)
	{
		string t;
		t += str[i];
		dfs(str, i+1, res, t);
	}
	
	cout << res.size() << endl;
	return 0;
}
