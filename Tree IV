题目描述 
给出一棵有n个结点的标准的完全二叉树（即，若父结点编号为x，则它的两个子结点的编号分别为x \times 2x×2和x \times 2 + 1x×2+1），定义每个结点的价值为xdep_xxdep 
x
 ，即每个点的编号乘以每个点的深度（深度即为从根结点到这一结点最短路径经过的点的个数，定义根结点1的深度为1）。
请你求解这棵树中每个结点的价值和（由于答案可能会很大，请你对998244353取模），即\sum\limits_{i=1}^{n}idep_i \ mod\ 998244353 
i=1
∑
n
​idep 
i	
  mod 998244353。
完全二叉树：若设二叉树的深度为k，除第 k 层外，其它各层 (1～k-1) 的结点数都达到最大个数，第 k 层所有的结点都连续集中在最左边。
例如（图为一棵标准的完全二叉树）：
示例1
输入
复制
2
返回值
复制
5
示例2
输入
复制
5
返回值
复制
38
说明
其计算公式为：1 * 1 + (2 + 3) * 2 + (4 + 5) * 3 = 38 （此式乘号前面为结点编号的和，后面为这些节点对应的深度）
备注:
数据满足：1\leq n\leq 10^91≤n≤10 
9
class Solution {
public:
    /**
     * 代码中的类名、方法名、参数名已经指定，请勿修改，直接返回方法规定的值即可
     * 
     * @param n long长整型 表示标准完全二叉树的结点个数
     * @return long长整型
     */
    long long tree4(long long n) {
        // write code here
        int deep = 1;
        long long res = 0;
        long long sum = 0;
        long long i = 1;
        for(; i*2 <= n; i *= 2)
        {
            sum = ((i + i*2 - 1)*i/2)%998244353;//求和公式求一层节点编号的和
            res = (res + sum * deep++)%998244353;//一层节点编号和乘深度求价值
        }
        sum = ((i + n)*(n - i + 1)/2)%998244353;
        res = (res + sum * deep)%998244353;
        return res;
    }
};